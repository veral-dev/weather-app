{"ast":null,"code":"var _jsxFileName = \"/Users/davidvrl/Desktop/Projects/weather-app/src/components/Weather.jsx\";\nimport React from 'react';\n\nconst Weather = ({\n  result\n}) => {\n  const {\n    name,\n    main\n  } = result;\n  if (!name) return null;\n  const kelvin = 273.15;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel white col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"black-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"El tiempo en \", name, \" es: \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"temperatura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, parseFloat(main.temp - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 69\n    }\n  }, \" \\u2103 \")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"Temperatura m\\xE1xima: \", parseFloat(main.temp_max - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 93\n    }\n  }, \" \\u2103 \")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Temperatura m\\xEDnima: \", parseFloat(main.temp_min - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 93\n    }\n  }, \" \\u2103 \"))));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/davidvrl/Desktop/Projects/weather-app/src/components/Weather.jsx"],"names":["React","Weather","result","name","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAE5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBF,MAAvB;AAEA,MAAI,CAACC,IAAL,EAAW,OAAO,IAAP;AAEX,QAAME,MAAM,GAAG,MAAf;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBF,IAAlB,UADJ,eAEI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,UAAU,CAACF,IAAI,CAACG,IAAL,GAAYF,MAAb,EAAqB,EAArB,CAAV,CAAmCG,OAAnC,CAA2C,CAA3C,CADL,oBACoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpD,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACyBF,UAAU,CAACF,IAAI,CAACK,QAAL,GAAgBJ,MAAjB,EAAyB,EAAzB,CAAV,CAAuCG,OAAvC,CAA+C,CAA/C,CADzB,oBAC4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD5E,CALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACyBF,UAAU,CAACF,IAAI,CAACM,QAAL,GAAgBL,MAAjB,EAAyB,EAAzB,CAAV,CAAuCG,OAAvC,CAA+C,CAA/C,CADzB,oBAC4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD5E,CARJ,CADJ,CADJ;AAgBH,CAxBD;;AA0BA,eAAeP,OAAf","sourcesContent":["import React from 'react'\n\n\nconst Weather = ({ result }) => {\n\n    const { name, main } = result\n\n    if (!name) return null\n\n    const kelvin = 273.15\n\n    return (\n        <div className=\"card-panel white col s12\">\n            <div className=\"black-text\">\n                <h2>El tiempo en {name} es: </h2>\n                <p className=\"temperatura\">\n                    {parseFloat(main.temp - kelvin, 10).toFixed(2)} <span> &#x2103; </span>\n                </p>\n                <p>\n                    Temperatura máxima: {parseFloat(main.temp_max - kelvin, 10).toFixed(2)} <span> &#x2103; </span>\n                </p>\n                <p>\n                    Temperatura mínima: {parseFloat(main.temp_min - kelvin, 10).toFixed(2)} <span> &#x2103; </span>\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}